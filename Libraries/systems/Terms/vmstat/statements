A fork in a system is a duplicated process.
A slab in memory is a kernel object that allows memory blocks to be dynamically allocated from a designated memory region.
A memory buffer is a temporary storage area in a computer's memory that holds data while it's being moved from one place to another.
An interrupt per second is the number of times (per second) a computer's processor is interrupted by a hardware event, such as a keyboad press or timer signal.
A context switch in a system is the process of storing the state of a process or thread so that it can be restored and resume execution at a later point, and then restoring a different, previously saved, state.
A page (according to mac's vm_stat command) is a fixed size block of memory that is managed by the operating system's virtual memory system.
A vm compressor is a memory management technique that utilizes data compression to reduce the size or number of paging requests to and from the auxiliary storage.
Auxiliary storage is secondary storage, not directly accessible by the cpu, which contains much much more storage than primary storage typically, because auxiliary storage can hold so much more.
I would get dynamic memory info every 2 seconds 3 times using vmstat by running: vmstat 2 3.
I would display the idle cpu usage every second 20 times while running other commands in between by running: echo cpu; vmstat 1 20 | sed '1d' | awk '{print $15}' &; commands_here; more_commands_here;.
The headers in vmstat mean the following--procs: r) number of processes waiting for cpu time, b) number of processes in an uninterruptible sleep state; memory: swpd) amount of virtual memory used, free) amount of idle memory, buff) amount of memory used as buffers (for block device I/O), cache) amount of memory useed as cache (to speed up file operations); swap: si) amount of memory swapped in from disk (bytes/second), so) amount of memory swapped out to disk; io: bi) blocks received from a block device (disk reads, in blocks per second), bo) blocks sent to a block device (disk writes); system: in) number of interrupts per second (including clock interrupts), cs) number of context switches per second; cpu: us) percentage of cpu time spent on user-level processes, sy) percentage of cpu time spent on system/kernel-level processes, id) percentage of cpu time spent idle, wa) percentage of cpu time spent waiting for i/o, st) percentage of cpu time stolen by a hypervisor for other virtual machines.
