Pods in kubernetes are a group of one or more containers that work together as a single logical host.
A service is defined in kubernetes as an abstraction that represents a logical set of pods, providing a stable network endpoint to access a group of pods even if the individual pods themselves are ephemeral and changing.
A deployment in kubernetes is a resource object that defines the desired state of an application, allowing you to specify how many replicas of a pod should be running and enabling controlled updates to your application by managing the lifecycle of pods, such as by rolling updates and rollbacks without manual interventions; in other words, it's a way to declare how your application should be deployed and to automatically maintain that state within the kubernetes cluster.
A namespace in kubernetes is a logical division within a cluster that allows you to group and isolate sets of resources, effectively creating virtual sub-clusters where different applications or teams can manage their resources separately within a single kubernetes cluster, preventing conflicts and simplifying access control; in other words, a namespace acts as a way to organize and partition resources within a cluster by creating unique scopes for resource names across different namespaces.
ConfigMaps and secrets in kubernetes are a way to store configuration data and sensitive information respectively; configMaps share non-sensitive data as key-value pairs, and supply configuration values that an app needs at runtime, and can be altered without re-deploying an app's pods, and are also intended to store relatively small amounts of simple data; secrets store sensitive information, such as passwords, and of course encrypt this data; secrets can be created by the system during an app's installation or by users at build time or run time.
A volume in kubernetes is a directory that stores data that can be accessed by containers in a pod.
A volume in kubernetes is like the following: k8s volume : docker containers in pod ~= docker volume : host filesystem.
A microservice is an abstraction within an application to perform some specific business function and can be developed, deployed, and scaled independently of other services.
Service discovery is the process of automatically detecting and identifying available services and devices on a network, allowing applications to locate and connect to said services dynamically and automatically; these are particularly important in a microservices architecture.
Kubernetes is an open-source system that automates container deployment tasks.
Kubernetes is a way to automate things like starting new apps when needed, restarting apps if they crash, spreading out work so that no one part of the system is overloaded (load balancing), and scaling up or down based on demand.
Kubernetes is a higher-level abstraction built on top of docker.
