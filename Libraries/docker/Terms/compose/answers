Where do docker containers in docker compose file get named? under the services tag, and then that name gets "sub"-named somehow, but this is also based on the contents of the docker compose file
Are all services in the docker compose file required to run as docker containers? no, you can include services that represent external dependencies, config details, or even data volumes that don't require a separate running container
Where do environment variables listed in docker compose file get used? anywhere during build or runtime
What is the difference between args and environment fields in docker compose file? that args can be used only at build time, whereas environment can be used at build or run time
What is a target in docker compose file? used during the build portion in a multi-stage context, in order to specify the stage of the dockerfile in which the service is to be built in
What does the depends_on field in docker compose file mean? run these services before the current service, because the current service depends on the service(s) under the depends_on field
What does the condition field under the depends_on field in docker compose file mean? either service_started, service_healthy, or service_completed_successfully, each of which double as the actual name for the field's possible entries, as well as a self-explanatory description for what each possible entry does; in general though, the condition field under the depends_on field in docker compose file is used to allow a service to wait on another service based on whatever condition was specified (service_started, service_healthy, or service_completed_successfully)
